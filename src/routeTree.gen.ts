/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as DashboardImport } from './routes/dashboard'
import { Route as AuthRouteImport } from './routes/_auth/route'
import { Route as IndexImport } from './routes/index'
import { Route as AuthVerifyEmailImport } from './routes/_auth/verify-email'
import { Route as AuthSignupImport } from './routes/_auth/signup'
import { Route as AuthSigninImport } from './routes/_auth/signin'
import { Route as AuthResetpassDealerImport } from './routes/_auth/resetpass-dealer'
import { Route as AuthResetpassImport } from './routes/_auth/resetpass'
import { Route as AuthForgotpassDealerImport } from './routes/_auth/forgotpass-dealer'
import { Route as AuthForgotpassImport } from './routes/_auth/forgotpass'
import { Route as AuthDealerSignupImport } from './routes/_auth/dealer-signup'
import { Route as AuthDealerSigninImport } from './routes/_auth/dealer-signin'

// Create/Update Routes

const DashboardRoute = DashboardImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const AuthRouteRoute = AuthRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthVerifyEmailRoute = AuthVerifyEmailImport.update({
  id: '/verify-email',
  path: '/verify-email',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AuthSignupRoute = AuthSignupImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AuthSigninRoute = AuthSigninImport.update({
  id: '/signin',
  path: '/signin',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AuthResetpassDealerRoute = AuthResetpassDealerImport.update({
  id: '/resetpass-dealer',
  path: '/resetpass-dealer',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AuthResetpassRoute = AuthResetpassImport.update({
  id: '/resetpass',
  path: '/resetpass',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AuthForgotpassDealerRoute = AuthForgotpassDealerImport.update({
  id: '/forgotpass-dealer',
  path: '/forgotpass-dealer',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AuthForgotpassRoute = AuthForgotpassImport.update({
  id: '/forgotpass',
  path: '/forgotpass',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AuthDealerSignupRoute = AuthDealerSignupImport.update({
  id: '/dealer-signup',
  path: '/dealer-signup',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AuthDealerSigninRoute = AuthDealerSigninImport.update({
  id: '/dealer-signin',
  path: '/dealer-signin',
  getParentRoute: () => AuthRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRoute
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardImport
      parentRoute: typeof rootRoute
    }
    '/_auth/dealer-signin': {
      id: '/_auth/dealer-signin'
      path: '/dealer-signin'
      fullPath: '/dealer-signin'
      preLoaderRoute: typeof AuthDealerSigninImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/dealer-signup': {
      id: '/_auth/dealer-signup'
      path: '/dealer-signup'
      fullPath: '/dealer-signup'
      preLoaderRoute: typeof AuthDealerSignupImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/forgotpass': {
      id: '/_auth/forgotpass'
      path: '/forgotpass'
      fullPath: '/forgotpass'
      preLoaderRoute: typeof AuthForgotpassImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/forgotpass-dealer': {
      id: '/_auth/forgotpass-dealer'
      path: '/forgotpass-dealer'
      fullPath: '/forgotpass-dealer'
      preLoaderRoute: typeof AuthForgotpassDealerImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/resetpass': {
      id: '/_auth/resetpass'
      path: '/resetpass'
      fullPath: '/resetpass'
      preLoaderRoute: typeof AuthResetpassImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/resetpass-dealer': {
      id: '/_auth/resetpass-dealer'
      path: '/resetpass-dealer'
      fullPath: '/resetpass-dealer'
      preLoaderRoute: typeof AuthResetpassDealerImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/signin': {
      id: '/_auth/signin'
      path: '/signin'
      fullPath: '/signin'
      preLoaderRoute: typeof AuthSigninImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/signup': {
      id: '/_auth/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof AuthSignupImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/verify-email': {
      id: '/_auth/verify-email'
      path: '/verify-email'
      fullPath: '/verify-email'
      preLoaderRoute: typeof AuthVerifyEmailImport
      parentRoute: typeof AuthRouteImport
    }
  }
}

// Create and export the route tree

interface AuthRouteRouteChildren {
  AuthDealerSigninRoute: typeof AuthDealerSigninRoute
  AuthDealerSignupRoute: typeof AuthDealerSignupRoute
  AuthForgotpassRoute: typeof AuthForgotpassRoute
  AuthForgotpassDealerRoute: typeof AuthForgotpassDealerRoute
  AuthResetpassRoute: typeof AuthResetpassRoute
  AuthResetpassDealerRoute: typeof AuthResetpassDealerRoute
  AuthSigninRoute: typeof AuthSigninRoute
  AuthSignupRoute: typeof AuthSignupRoute
  AuthVerifyEmailRoute: typeof AuthVerifyEmailRoute
}

const AuthRouteRouteChildren: AuthRouteRouteChildren = {
  AuthDealerSigninRoute: AuthDealerSigninRoute,
  AuthDealerSignupRoute: AuthDealerSignupRoute,
  AuthForgotpassRoute: AuthForgotpassRoute,
  AuthForgotpassDealerRoute: AuthForgotpassDealerRoute,
  AuthResetpassRoute: AuthResetpassRoute,
  AuthResetpassDealerRoute: AuthResetpassDealerRoute,
  AuthSigninRoute: AuthSigninRoute,
  AuthSignupRoute: AuthSignupRoute,
  AuthVerifyEmailRoute: AuthVerifyEmailRoute,
}

const AuthRouteRouteWithChildren = AuthRouteRoute._addFileChildren(
  AuthRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof AuthRouteRouteWithChildren
  '/dashboard': typeof DashboardRoute
  '/dealer-signin': typeof AuthDealerSigninRoute
  '/dealer-signup': typeof AuthDealerSignupRoute
  '/forgotpass': typeof AuthForgotpassRoute
  '/forgotpass-dealer': typeof AuthForgotpassDealerRoute
  '/resetpass': typeof AuthResetpassRoute
  '/resetpass-dealer': typeof AuthResetpassDealerRoute
  '/signin': typeof AuthSigninRoute
  '/signup': typeof AuthSignupRoute
  '/verify-email': typeof AuthVerifyEmailRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof AuthRouteRouteWithChildren
  '/dashboard': typeof DashboardRoute
  '/dealer-signin': typeof AuthDealerSigninRoute
  '/dealer-signup': typeof AuthDealerSignupRoute
  '/forgotpass': typeof AuthForgotpassRoute
  '/forgotpass-dealer': typeof AuthForgotpassDealerRoute
  '/resetpass': typeof AuthResetpassRoute
  '/resetpass-dealer': typeof AuthResetpassDealerRoute
  '/signin': typeof AuthSigninRoute
  '/signup': typeof AuthSignupRoute
  '/verify-email': typeof AuthVerifyEmailRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_auth': typeof AuthRouteRouteWithChildren
  '/dashboard': typeof DashboardRoute
  '/_auth/dealer-signin': typeof AuthDealerSigninRoute
  '/_auth/dealer-signup': typeof AuthDealerSignupRoute
  '/_auth/forgotpass': typeof AuthForgotpassRoute
  '/_auth/forgotpass-dealer': typeof AuthForgotpassDealerRoute
  '/_auth/resetpass': typeof AuthResetpassRoute
  '/_auth/resetpass-dealer': typeof AuthResetpassDealerRoute
  '/_auth/signin': typeof AuthSigninRoute
  '/_auth/signup': typeof AuthSignupRoute
  '/_auth/verify-email': typeof AuthVerifyEmailRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/dashboard'
    | '/dealer-signin'
    | '/dealer-signup'
    | '/forgotpass'
    | '/forgotpass-dealer'
    | '/resetpass'
    | '/resetpass-dealer'
    | '/signin'
    | '/signup'
    | '/verify-email'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/dashboard'
    | '/dealer-signin'
    | '/dealer-signup'
    | '/forgotpass'
    | '/forgotpass-dealer'
    | '/resetpass'
    | '/resetpass-dealer'
    | '/signin'
    | '/signup'
    | '/verify-email'
  id:
    | '__root__'
    | '/'
    | '/_auth'
    | '/dashboard'
    | '/_auth/dealer-signin'
    | '/_auth/dealer-signup'
    | '/_auth/forgotpass'
    | '/_auth/forgotpass-dealer'
    | '/_auth/resetpass'
    | '/_auth/resetpass-dealer'
    | '/_auth/signin'
    | '/_auth/signup'
    | '/_auth/verify-email'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRouteRoute: typeof AuthRouteRouteWithChildren
  DashboardRoute: typeof DashboardRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRouteRoute: AuthRouteRouteWithChildren,
  DashboardRoute: DashboardRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_auth",
        "/dashboard"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_auth": {
      "filePath": "_auth/route.tsx",
      "children": [
        "/_auth/dealer-signin",
        "/_auth/dealer-signup",
        "/_auth/forgotpass",
        "/_auth/forgotpass-dealer",
        "/_auth/resetpass",
        "/_auth/resetpass-dealer",
        "/_auth/signin",
        "/_auth/signup",
        "/_auth/verify-email"
      ]
    },
    "/dashboard": {
      "filePath": "dashboard.tsx"
    },
    "/_auth/dealer-signin": {
      "filePath": "_auth/dealer-signin.tsx",
      "parent": "/_auth"
    },
    "/_auth/dealer-signup": {
      "filePath": "_auth/dealer-signup.tsx",
      "parent": "/_auth"
    },
    "/_auth/forgotpass": {
      "filePath": "_auth/forgotpass.tsx",
      "parent": "/_auth"
    },
    "/_auth/forgotpass-dealer": {
      "filePath": "_auth/forgotpass-dealer.tsx",
      "parent": "/_auth"
    },
    "/_auth/resetpass": {
      "filePath": "_auth/resetpass.tsx",
      "parent": "/_auth"
    },
    "/_auth/resetpass-dealer": {
      "filePath": "_auth/resetpass-dealer.tsx",
      "parent": "/_auth"
    },
    "/_auth/signin": {
      "filePath": "_auth/signin.tsx",
      "parent": "/_auth"
    },
    "/_auth/signup": {
      "filePath": "_auth/signup.tsx",
      "parent": "/_auth"
    },
    "/_auth/verify-email": {
      "filePath": "_auth/verify-email.tsx",
      "parent": "/_auth"
    }
  }
}
ROUTE_MANIFEST_END */
